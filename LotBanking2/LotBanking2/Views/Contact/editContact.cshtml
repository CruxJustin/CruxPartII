@model LotBanking2.viewmodels.builderConnect

@{
    ViewBag.Title = "Create";
}

<h2>Contact</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)


    <fieldset>
        <h2>Phone</h2>

        <!-- -----------------------------------------------------------Phone------------------------------------------------------------------ -->
      
      
       @if(ViewBag.isEdit){
        @Html.HiddenFor(model => model.contact.phone.id)
       }
        <div class="editor-label">
            @Html.LabelFor(model => model.contact.phone.type)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.contact.phone.type)
            @Html.ValidationMessageFor(model => model.phone.type)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.contact.phone.phone1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.contact.phone.phone1)
            @Html.ValidationMessageFor(model => model.contact.phone.phone1)
        </div>

        <!-- -----------------------------------------------------------END Phone------------------------------------------------------------------ -->

        <h2>Email</h2>

        <!-- -----------------------------------------------------------EMAIL------------------------------------------------------------------ -->
          <legend>email</legend>
        @if(ViewBag.isEdit){
          @Html.HiddenFor(model => model.contact.email.id)
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.contact.email.type)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.contact.email.type)
            @Html.ValidationMessageFor(model => model.contact.email.type)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.contact.email.email1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.contact.email.email1)
            @Html.ValidationMessageFor(model => model.contact.email.email1)
        </div>
        <!-- -----------------------------------------------------------END EMAIL------------------------------------------------------------------ -->

        <h2>Address</h2>

        <!-- -----------------------------------------------------------Address------------------------------------------------------------------ -->
        <legend>Address</legend>
        @if(ViewBag.isEdit){
            @Html.HiddenFor(model => model.contact.address.id)
        }
         <div class="editor-label">
            @Html.LabelFor(model => model.contact.address.address1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.contact.address.address1)
            @Html.ValidationMessageFor(model => model.contact.address.address1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.contact.address.address2)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.contact.address.address2)
            @Html.ValidationMessageFor(model => model.contact.address.address2)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.contact.address.address3)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.contact.address.address3)
            @Html.ValidationMessageFor(model => model.contact.address.address3)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.contact.address.city)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.contact.address.city)
            @Html.ValidationMessageFor(model => model.contact.address.city)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.contact.address.state)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.contact.address.state)
            @Html.ValidationMessageFor(model => model.contact.address.state)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.contact.address.zipcode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.contact.address.zipcode)
            @Html.ValidationMessageFor(model => model.contact.address.zipcode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.contact.address.county)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.contact.address.county)
            @Html.ValidationMessageFor(model => model.contact.address.county)
        </div>

        <!-- -----------------------------------------------------------END Address------------------------------------------------------------------ -->

    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
